set -g prefix C-b

# for arrow keys
set-window-option -g xterm-keys off

set-option -g default-command "reattach-to-user-namespace -l zsh"
set -g history-limit 20000

# use VI
set-window-option -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# clear screen
bind C-l send-keys 'C-l'

# reload config
unbind r
bind r source-file ~/.tmux.conf; display "Reloaded!"

unbind ^T
bind ^T split-window -p 25

# horizontal and vertical splits
unbind |
bind | split-window -h
unbind _
bind _ split-window

# tile all windows
unbind =
bind = select-layout tiled

# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe 'reattach-to-user-namespace pbcopy'

# cycle through panes
unbind ^A
bind ^A select-pane -t :.+

# unbind +
# bind + resize-pane -Z

unbind Right
bind Right resize-pane -R 8
unbind Left
bind Left resize-pane -L 8
unbind Up
bind Up resize-pane -U 4
unbind Down
bind Down resize-pane -D 4

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# set first window to index 1 (not 0) to map more to the keyboard layout...
set -g base-index 1

set-window-option -g pane-base-index 1

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold
set -g status-left '#[fg=colour255,bg=colour242,bold] #S #[fg=colour252,bg=colour234,nobold]'
set -g status-right '#(battery-life)#(battery-time) | %d-%b-%y %H:%M#[default] '
set -g window-status-format "#[fg=colour240]#I: #W "
set -g window-status-current-format "#[fg=colour255,bold]#I: #W "

# Screen like binding for last window
unbind l
bind C-b last-window

# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50

# # Vim-style copy mode
# unbind [
# bind Escape copy-mode
# unbind p
# bind p paste-buffer
# bind-key -t vi-copy 'v' begin-selection
# bind-key -t vi-copy 'y' copy-selection

setw -g utf8 on
set -g status-utf8 on

set-window-option -g allow-rename off
set-window-option -g automatic-rename off

set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Toggle mouse on
bind m \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'

# Toggle mouse off
bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'
