#!/bin/bash

# Emits Git metadata for use in a Zsh prompt.
#
# Based on Geoffrey Grosenbach's modified version of:
#   https://github.com/benhoskings/dot-files/blob/master/files/bin/git_cwd_info
#
# Rewritten as shell script simply for speed

GIT_REPO_PATH=`git rev-parse --git-dir 2>/dev/null`

if [[ $GIT_REPO_PATH != '' && $GIT_REPO_PATH != '~' && $GIT_REPO_PATH != "$HOME/.git" ]]; then

  GIT_BRANCH=`git symbolic-ref -q HEAD | sed 's/refs\/heads\///'`
  GIT_COMMIT_ID=`git rev-parse --short HEAD 2>/dev/null`

  GIT_MODE=""
  if [[ -e "$GIT_REPO_PATH/BISECT_LOG" ]]; then
    GIT_MODE=" +bisect"
  elif [[ -e "$GIT_REPO_PATH/MERGE_HEAD" ]]; then
    GIT_MODE=" +merge"
  elif [[ -e "$GIT_REPO_PATH/rebase" || -e "$GIT_REPO_PATH/rebase-apply" || -e "$GIT_REPO_PATH/rebase-merge" || -e "$GIT_REPO_PATH/../.dotest" ]]; then
    GIT_MODE=" +rebase"
  fi

  GIT_UNTRACKED=""
  if [[ "$GIT_REPO_PATH" != '.' && `git ls-files --others --exclude-standard` != "" ]]; then
    GIT_UNTRACKED="%{%F{red}%}?%{%F{reset}%}"
  fi

  GIT_UNMERGED=""
  if [[ "$GIT_REPO_PATH" != '.' && `git ls-files -u` != "" ]]; then
    GIT_UNMERGED="%{%F{red}%}*%{%F{reset}%}"
  fi

  GIT_DIRTY=""
  if [[ "$GIT_REPO_PATH" != '.' && `git ls-files -m` != "" ]]; then
    GIT_DIRTY="%{%F{reset}%}✗%{%F{reset}%}"
    GIT_DIRTY="%{%F{red}%}!%{%F{reset}%}"
  fi

  GIT_STAGED_FILES=""
  if [[ "$GIT_REPO_PATH" != '.' && `git diff --cached 2>/dev/null` != "" ]]; then
    GIT_STAGED_FILES="%{%F{reset}%}✔%{%F{reset}%}"
    GIT_STAGED_FILES="%{%F{green}%}+%{%F{reset}%}"
  fi

  GIT_STATUS=""
  if [[ $GIT_UNTRACKED != '' || $GIT_UNMERGED != '' || $GIT_DIRTY != '' || $GIT_STAGED_FILES != '' ]]; then
    GIT_STATUS="[$GIT_MODE$GIT_STAGED_FILES$GIT_DIRTY$GIT_UNMERGED$GIT_UNTRACKED]"
  fi

  echo "%{%B%F{magenta}%}$GIT_BRANCH%{%F{reset}%}@%{%b%F{yellow}%}$GIT_COMMIT_ID%{%F{reset}%} $GIT_STATUS"
fi
